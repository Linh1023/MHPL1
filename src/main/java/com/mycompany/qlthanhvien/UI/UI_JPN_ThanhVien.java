/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.qlthanhvien.UI;

import com.mycompany.qlthanhvien.BLL.BLL_ThanhVien;
import com.mycompany.qlthanhvien.BLL.ThanhVien;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

import java.util.ArrayList;

import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;

import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.hibernate.SessionFactory;


/**
 *
 * @author Admin
 */
public final class UI_JPN_ThanhVien extends javax.swing.JPanel {

    /**
     * Creates new form UI_QLThanhVien
     */
    List<ThanhVien> arraythanhvien;
    BLL_ThanhVien bll_thanhvien = new BLL_ThanhVien();
    private SessionFactory sessionFactory;

    public UI_JPN_ThanhVien() {
        initComponents();
        loadThanhVien();
        loadData();
        initializeComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_Search = new javax.swing.JTextField();
        jComboBox_value = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_ThanhVien = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField_MaTV = new javax.swing.JTextField();
        jTextField_HoTen = new javax.swing.JTextField();
        jTextField_Khoa = new javax.swing.JTextField();
        jTextField_Nganh = new javax.swing.JTextField();
        jTextField_SDT = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField_Email = new javax.swing.JTextField();
        jTextField_PassWord = new javax.swing.JTextField();
        jButton_Add = new javax.swing.JButton();
        jButton_Update = new javax.swing.JButton();
        jButton_Deleted = new javax.swing.JButton();
        jButton_addExcel = new javax.swing.JButton();
        jButton_Refresh = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jComboBox_Year_Value = new javax.swing.JComboBox<>();
        jButton_DeletedByYear = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jButton_Search = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("QUẢN LÝ THÀNH VIÊN");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setText("Tìm kiếm: ");

        jTextField_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_SearchActionPerformed(evt);
            }
        });

        jComboBox_value.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MaTV", "HoTen", "Khoa", "Nganh", "SDT" }));
        jComboBox_value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_valueActionPerformed(evt);
            }
        });

        jButton1.setText("Thoát");

        jTable_ThanhVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1234567890", "Hoàng Bảo Lộc", "cntt", "KTPM", "123456789", "12345678", "abc@gmail.com"},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã TV", "Họ Tên", "Khoa", "Ngành", "SDT", "Password", "Email"
            }
        ));
        jScrollPane1.setViewportView(jTable_ThanhVien);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Thông Tin Thành Viên");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Mã TV: ");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Khoa: ");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Ngành: ");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Họ Tên: ");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("SDT: ");

        jTextField_MaTV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_MaTVActionPerformed(evt);
            }
        });

        jTextField_HoTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_HoTenActionPerformed(evt);
            }
        });

        jTextField_Nganh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_NganhActionPerformed(evt);
            }
        });

        jTextField_SDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_SDTActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Password: ");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Email: ");

        jTextField_Email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_EmailActionPerformed(evt);
            }
        });

        jTextField_PassWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PassWordActionPerformed(evt);
            }
        });

        jButton_Add.setText("Thêm");
        jButton_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddActionPerformed(evt);
            }
        });

        jButton_Update.setText("Sửa");
        jButton_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UpdateActionPerformed(evt);
            }
        });

        jButton_Deleted.setText("Xóa");
        jButton_Deleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DeletedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField_MaTV, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jTextField_Khoa, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jTextField_HoTen))))
                                .addGap(18, 29, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField_Email))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField_PassWord))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField_SDT, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton_Add)
                                .addGap(18, 18, 18)
                                .addComponent(jButton_Update)
                                .addGap(18, 18, 18)
                                .addComponent(jButton_Deleted)))
                        .addGap(0, 35, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_Nganh, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_MaTV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_SDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_HoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_PassWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Khoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_Nganh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Add)
                    .addComponent(jButton_Update)
                    .addComponent(jButton_Deleted))
                .addGap(11, 11, 11))
        );

        jButton_addExcel.setText("Nhập Excel");
        jButton_addExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_addExcelActionPerformed(evt);
            }
        });

        jButton_Refresh.setText("Refresh");
        jButton_Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RefreshActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Xóa Theo Điều Kiện");

        jComboBox_Year_Value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_Year_ValueActionPerformed(evt);
            }
        });

        jButton_DeletedByYear.setText("Xóa");
        jButton_DeletedByYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DeletedByYearActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Năm: ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(93, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton_DeletedByYear, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox_Year_Value, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(102, 102, 102))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox_Year_Value, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(62, 62, 62)
                .addComponent(jButton_DeletedByYear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jButton_Search.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton_Search.setText("Tìm");
        jButton_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox_value, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_Search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(26, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton_addExcel)
                                .addGap(68, 68, 68)
                                .addComponent(jButton_Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(330, 330, 330))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jComboBox_value, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jButton1))
                    .addComponent(jButton_Search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Refresh)
                    .addComponent(jButton_addExcel))
                .addContainerGap())
        );
    }// </editor-fold>                        

    public void loadThanhVien() {
        BLL_ThanhVien bll_thanhvien = new BLL_ThanhVien();
        arraythanhvien = bll_thanhvien.getThanhVien();
        DefaultTableModel model = (DefaultTableModel) jTable_ThanhVien.getModel();
        model.setRowCount(0);
        for (int i = 0; i < arraythanhvien.size(); i++) {
            ThanhVien tv = arraythanhvien.get(i);
            Object[] newrow = new Object[]{tv.getMaTV(), tv.getHoten(), tv.getKhoa(), tv.getNganh(), tv.getSDT(), tv.getPassword(), tv.getEmail()};
            model.addRow(newrow);
        }
    }

    private void jTextField_MaTVActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void jTextField_HoTenActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void jButton_DeletedActionPerformed(java.awt.event.ActionEvent evt) {                                                
        int selectedRow = jTable_ThanhVien.getSelectedRow();

        if (selectedRow == -1) {
            // Không có hàng nào được chọn
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một hàng để xóa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        } else {
            // Lấy giá trị của cột mã thành viên từ hàng được chọn
            int maTV = (int) jTable_ThanhVien.getValueAt(selectedRow, 0);

            // Hiển thị hộp thoại thông báo để xác nhận việc xóa
            int option = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa thành viên này không?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                // Nếu người dùng chọn Yes, thực hiện xóa thành viên
                ThanhVien thanhVien = new ThanhVien();
                thanhVien.setMaTV(maTV);
                BLL_ThanhVien bll_thanhvien = new BLL_ThanhVien();
                bll_thanhvien.deleteThanhVien(thanhVien);
                // Cập nhật lại bảng để hiển thị dữ liệu mới
                refreshTable();
            }
        }
    }                                               

    private void refreshTable() {
        loadThanhVien();
        jTextField_MaTV.setText("");
        jTextField_HoTen.setText("");
        jTextField_Khoa.setText("");
        jTextField_Nganh.setText("");
        jTextField_SDT.setText("");
        jTextField_Email.setText("");
        jTextField_PassWord.setText("");

    }

    private void loadData() {
        // Add a ListSelectionListener to the table
        jTable_ThanhVien.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    displaySelectedRowData();
                }
            }
        });
    }

    private void displaySelectedRowData() {
        int selectedRowIndex = jTable_ThanhVien.getSelectedRow();
        if (selectedRowIndex != -1) {
            DefaultTableModel model = (DefaultTableModel) jTable_ThanhVien.getModel();
            jTextField_MaTV.setText(model.getValueAt(selectedRowIndex, 0).toString());
            jTextField_HoTen.setText(model.getValueAt(selectedRowIndex, 1).toString());
            jTextField_Khoa.setText(model.getValueAt(selectedRowIndex, 2).toString());
            jTextField_Nganh.setText(model.getValueAt(selectedRowIndex, 3).toString());
            jTextField_SDT.setText(model.getValueAt(selectedRowIndex, 4).toString());
            jTextField_PassWord.setText(model.getValueAt(selectedRowIndex, 5).toString());
            jTextField_Email.setText(model.getValueAt(selectedRowIndex, 6).toString());
            //jSpinner_Date.setValue(enrollmentDate);
        }
    }

    private void jButton_addExcelActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        funcUIAddThietBiExcel();
        refreshTable();
    }                                                
    private boolean funcUIAddThietBiExcel() {
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files", "xls", "xlsx");
        fileChooser.setFileFilter(filter);

        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            if (chooseSheet(selectedFile)) {
                //showMessageDialog("Import Thành Công", "Thành Công");
                return true;
            }
        }
        return false;
    }

    public boolean chooseSheet(File file) {
        try (
                FileInputStream fis = new FileInputStream(file); XSSFWorkbook workbook = new XSSFWorkbook(fis)) {
            int numSheets = workbook.getNumberOfSheets();
            String[] sheetNames = new String[numSheets];
            for (int i = 0; i < numSheets; i++) {
                sheetNames[i] = workbook.getSheetName(i);
            }
            String selectedSheet = (String) JOptionPane.showInputDialog(null, "Chọn sheet:", "Chọn Sheet",
                    JOptionPane.QUESTION_MESSAGE, null, sheetNames, sheetNames[0]);
            if (selectedSheet != null) {
                if (readExcel(file, selectedSheet)) {
                    return true;
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return false;
    }
    private boolean danhsachThanhVien() {
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files", "xls", "xlsx");
        fileChooser.setFileFilter(filter);

        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            if (chooseSheet(selectedFile)) {
                //showMessageDialog("Import Thành Công", "Thành Công");
                return true;
            }
        }
        return false;
    }
    public boolean readExcel(File file, String sheetName) {
        ArrayList<ThanhVien> danhsachThanhVien = new ArrayList();
        try (FileInputStream fis = new FileInputStream(file); Workbook workbook = new XSSFWorkbook(fis)) {
            Sheet sheet = workbook.getSheet(sheetName);
            boolean firstRow = true; // Biến đánh dấu dòng đầu tiên
            for (Row row : sheet) {
                if (firstRow) {
                    firstRow = false;
                    continue; // Bỏ qua dòng đầu tiên
                }
                if (isRowEmpty(row)) {
                    continue; // Bỏ qua dòng rỗng
                }
                ThanhVien tb = new ThanhVien();
                int cellIndex = 0;
                for (Cell cell : row) {

                    if (cellIndex == 0) {
                        double textString = cell.getNumericCellValue();
                        int demo = (int) textString;
                        tb.setMaTV(demo);
                    }
                    if (cellIndex == 1) {
                        tb.setHoten(cell.getStringCellValue());
                    }
                    if (cellIndex == 2) {
                        tb.setKhoa(cell.getStringCellValue());
                    }
                    if (cellIndex == 3) {
                        tb.setNganh(cell.getStringCellValue());
                    }
                    if (cellIndex == 4) {
                        tb.setSDT(cell.getStringCellValue());
                    }
                    if (cellIndex == 5) {
                        double textString = cell.getNumericCellValue();
                        int demo2 = (int) textString;
                        String demo3 = demo2 + "";
                        tb.setPassword(demo3);
                    }
                    if (cellIndex == 6) {
                        tb.setEmail(cell.getStringCellValue());
                    }
                    cellIndex++;
                }
                danhsachThanhVien.add(tb);
            }

        } catch (IOException e) {
            e.printStackTrace();
            return false;
        }
        return bll_thanhvien.importExcel(danhsachThanhVien);
    }
    public boolean isRowEmpty(Row row) {
        for (int cellNum = row.getFirstCellNum(); cellNum < row.getLastCellNum(); cellNum++) {
            Cell cell = row.getCell(cellNum);
            if (cell != null && cell.getCellType() != CellType.BLANK) {
                return false; // Dòng không rỗng
            }
        }
        return true;
    }
    private void jButton_UpdateActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // Lấy dữ liệu từ các JTextField
        int maTV = Integer.parseInt(jTextField_MaTV.getText());
        String hoTen = jTextField_HoTen.getText();
        String khoa = jTextField_Khoa.getText();
        String nganh = jTextField_Nganh.getText();
        String sdt = jTextField_SDT.getText();
        String passWord = jTextField_PassWord.getText();
        String email = jTextField_Email.getText();

        // Gọi phương thức từ BLL để thực hiện sửa thông tin thành viên
        BLL_ThanhVien thanhVienBLL = new BLL_ThanhVien(); // sessionFactory cần được khai báo hoặc truyền vào từ bên ngoài
        ThanhVien thanhVien = new ThanhVien();
        thanhVien.setMaTV(maTV);
        thanhVien.setHoten(hoTen);
        thanhVien.setKhoa(khoa);
        thanhVien.setNganh(nganh);
        thanhVien.setSDT(sdt);
        thanhVien.setPassword(passWord);
        thanhVien.setEmail(email);
        thanhVienBLL.updateThanhVien(thanhVien);

        // Cập nhật lại bảng hoặc thực hiện các xử lý cần thiết sau khi sửa thông tin
        refreshTable(); // Ví dụ: Cập nhật lại bảng
    }                                              

    private void jButton_AddActionPerformed(java.awt.event.ActionEvent evt) {                                            
        String strMaTV = jTextField_MaTV.getText();
        String hoTen = jTextField_HoTen.getText();
        String khoa = jTextField_Khoa.getText();
        String nganh = jTextField_Nganh.getText();
        String sdt = jTextField_SDT.getText();
        String passwword = jTextField_PassWord.getText();
        String email = jTextField_Email.getText();
        // Kiểm tra xem có trường nào trống không
        if (hoTen.isEmpty() || khoa.isEmpty() || nganh.isEmpty() || sdt.isEmpty() || passwword.isEmpty() || email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                int maTV = Integer.parseInt(strMaTV); // Chuyển đổi từ chuỗi sang int
               //  Gọi phương thức từ BLL để thêm mới thành viên
                BLL_ThanhVien bll_thanhvien = new BLL_ThanhVien();
                ThanhVien thanhVien = new ThanhVien();
                thanhVien.setMaTV(maTV);
                thanhVien.setHoten(hoTen);
                thanhVien.setKhoa(khoa);
                thanhVien.setNganh(nganh);
                thanhVien.setSDT(sdt);
                thanhVien.setPassword(passwword);
                thanhVien.setEmail(email);
                bll_thanhvien.addThanhVien(thanhVien);

                // Hiển thị thông báo thành công
                JOptionPane.showMessageDialog(this, "Thêm thành viên mới thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

                // Sau khi thêm mới thành viên, cập nhật lại bảng để hiển thị dữ liệu mới
                refreshTable();

                // Xóa nội dung trong các textfield sau khi thêm thành công
                jTextField_MaTV.setText("");
                jTextField_HoTen.setText("");
                jTextField_Khoa.setText("");
                jTextField_Nganh.setText("");
                jTextField_SDT.setText("");
                jTextField_Email.setText("");
                jTextField_PassWord.setText("");
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Mã thành viên phải là một số nguyên.", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
        }
    }                                           

    private void jComboBox_valueActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void jTextField_EmailActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void jTextField_PassWordActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
    }                                                   

    private void jTextField_SDTActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void jTextField_NganhActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void jTextField_SearchActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
    }                                                 

    private void jButton_SearchActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // Lấy giá trị được chọn từ JComboBox
        String selectedColumn = jComboBox_value.getSelectedItem().toString();
        String searchValue = jTextField_Search.getText(); // Giá trị tìm kiếm từ JTextField
        if (searchValue.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập giá trị để tìm kiếm.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return; // Dừng hàm nếu searchValue rỗng
        }
        if (!isNumeric(searchValue)) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số cho tìm kiếm.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return; // Dừng hàm nếu searchValue không phải là số
        }
        BLL_ThanhVien bll_thanhvien = new BLL_ThanhVien();
        List<ThanhVien> searchResults = bll_thanhvien.SearchThanhVien(selectedColumn, searchValue);
        displaySearchResults(searchResults);
    }                                              
    private boolean isNumeric(String str) {
        if (str == null || str.isEmpty()) {
            return false;
        }
        for (char c : str.toCharArray()) {
            if (!Character.isDigit(c)) {
                return false;
            }
        }
        return true;
    }
    
    private void jButton_RefreshActionPerformed(java.awt.event.ActionEvent evt) {                                                

        loadThanhVien();
        jTextField_MaTV.setText("");
        jTextField_HoTen.setText("");
        jTextField_Khoa.setText("");
        jTextField_Nganh.setText("");
        jTextField_SDT.setText("");
        jTextField_Email.setText("");
        jTextField_PassWord.setText("");
    }                                               

    private void jComboBox_Year_ValueActionPerformed(java.awt.event.ActionEvent evt) {                                                     

        String selectedYear = (String) jComboBox_Year_Value.getSelectedItem();
        int year = Integer.parseInt(selectedYear);
        updateTableByYear(year);
        
    }                                                    

    private void jButton_DeletedByYearActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        String selectedYear = (String) jComboBox_Year_Value.getSelectedItem();
        int year = Integer.parseInt(selectedYear);

        int confirmed = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa danh sách thành viên năm 20" + selectedYear + " không?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        if (confirmed == JOptionPane.YES_OPTION) {
            BLL_ThanhVien thanhVienBLL = new BLL_ThanhVien();
            try {
                thanhVienBLL.deleteThanhVienByYear(year);
                JOptionPane.showMessageDialog(this, "Vì một số ràng buộc khóa ngoại nên chỉ xóa các Thành Viên không có trong Thông Tin Sử Dụng và Xử Lý", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                JOptionPane.showMessageDialog(this, "Đã xóa thành viên cho năm 20" + selectedYear, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                loadThanhVien();
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi xóa thành viên", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
            // Nếu lỗi có mã số là 1451 (ràng buộc khóa ngoại)
            // Nếu không phải lỗi ràng buộc khóa ngoại, in ra thông báo lỗi khác

        }
    }                                                     
    private void initializeComboBox() {
        BLL_ThanhVien thanhVienBLL = new BLL_ThanhVien();
        List<Integer> years = thanhVienBLL.getDistinctYears();

        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
        for (Integer year : years) {
            comboBoxModel.addElement(String.valueOf(year));
        }
        jComboBox_Year_Value.setModel(comboBoxModel);
    }
    private void updateTableByYear(int year) {
    BLL_ThanhVien thanhVienBLL = new BLL_ThanhVien();
    List<ThanhVien> thanhViens = thanhVienBLL.getThanhVienByYear(year);

    DefaultTableModel model = (DefaultTableModel) jTable_ThanhVien.getModel();
    model.setRowCount(0); // Xóa dữ liệu cũ

    for (ThanhVien thanhVien : thanhViens) {
        Object[] row = {
            thanhVien.getMaTV(),
            thanhVien.getHoten(),
            thanhVien.getKhoa(),
            thanhVien.getNganh(),
            thanhVien.getSDT(),
            thanhVien.getPassword(),
            thanhVien.getEmail()
        };
        model.addRow(row);
    }
}
    // Hàm hiển thị kết quả tìm kiếm
    private void displaySearchResults(List<ThanhVien> searchResults) {
        DefaultTableModel model = (DefaultTableModel) jTable_ThanhVien.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ
        for (ThanhVien tv : searchResults) {
            model.addRow(new Object[]{tv.getMaTV(), tv.getHoten(), tv.getKhoa(), tv.getNganh(), tv.getSDT(), tv.getPassword(), tv.getEmail()});
        }
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_Add;
    private javax.swing.JButton jButton_Deleted;
    private javax.swing.JButton jButton_DeletedByYear;
    private javax.swing.JButton jButton_Refresh;
    private javax.swing.JButton jButton_Search;
    private javax.swing.JButton jButton_Update;
    private javax.swing.JButton jButton_addExcel;
    private javax.swing.JComboBox<String> jComboBox_Year_Value;
    private javax.swing.JComboBox<String> jComboBox_value;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_ThanhVien;
    private javax.swing.JTextField jTextField_Email;
    private javax.swing.JTextField jTextField_HoTen;
    private javax.swing.JTextField jTextField_Khoa;
    private javax.swing.JTextField jTextField_MaTV;
    private javax.swing.JTextField jTextField_Nganh;
    private javax.swing.JTextField jTextField_PassWord;
    private javax.swing.JTextField jTextField_SDT;
    private javax.swing.JTextField jTextField_Search;
    // End of variables declaration                   
}
